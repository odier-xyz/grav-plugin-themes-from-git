<?php
/*--------------------------------------------------------------------------------------------------------------------*/

namespace Grav\Plugin\ThemesFromGit;

/*--------------------------------------------------------------------------------------------------------------------*/

use Grav\Common\Grav;
use Grav\Common\Utils;
use Grav\Common\Plugin;
use Grav\Plugin\ThemesFromGit\GitOps;
use Grav\Plugin\Admin\AdminBaseController;

/*--------------------------------------------------------------------------------------------------------------------*/

class AdminController extends AdminBaseController
{
	/*----------------------------------------------------------------------------------------------------------------*/

	private $gitOps = null;
	private $target = null;
	private $action = null;
	private $active = false;

	/*----------------------------------------------------------------------------------------------------------------*/
	
	public function __construct(Plugin $plugin)
	{
		/*------------------------------------------------------------------------------------------------------------*/

		$this->grav = Grav::instance();

		/*------------------------------------------------------------------------------------------------------------*/

		if(Utils::isAdminPlugin())
		{
			/*--------------------------------------------------------------------------------------------------------*/

			$this->gitOps = new GitOps();

			/*--------------------------------------------------------------------------------------------------------*/

			$this->admin = Grav::instance()['admin'];

			$routeDetails = $this->admin->getRouteDetails();

			$this->target = array_pop($routeDetails);

			if($this->target !== $plugin->name)
			{
				return;
			}

			/*--------------------------------------------------------------------------------------------------------*/

			$this->action = $this->grav['uri']->query('action');

			/*--------------------------------------------------------------------------------------------------------*/

			if($this->action)
			{
				$this->active = true;
			}

			/*--------------------------------------------------------------------------------------------------------*/
		}

		/*------------------------------------------------------------------------------------------------------------*/
	}

	/*----------------------------------------------------------------------------------------------------------------*/

	public function execute(): bool
	{
		/**/ if($this->action === 'check')
		{
			$uri = $this->grav['uri'];

			$result = $this->gitOps->check(
				$uri->query('theme'),
				$uri->query('repoURL'),
				$uri->query('repoBranch')
			);

			echo json_encode([
				'status' => $result ? 'success' : 'error',
			]);

			header('Content-Type: application/json; charset=utf-8');

			exit;
		}
		else if($this->action === 'synchronize')
		{
			$result = $this->gitOps->synchronize();

			echo json_encode([
				'status' => $result ? 'success' : 'error',
			]);

			header('Content-Type: application/json; charset=utf-8');

			exit;
		}

		return true;
	}

	/*----------------------------------------------------------------------------------------------------------------*/

	public function isActive(): bool
	{
		return $this->active;
	}

	/*----------------------------------------------------------------------------------------------------------------*/
}

/*--------------------------------------------------------------------------------------------------------------------*/
